#!/bin/env python
# -*- coding: utf8 -*-

from os import environ, system, fork, execl, kill, getcwd, chdir, listdir, mkdir
from os.path import exists
from signal import SIGHUP
from time import sleep
from commands import getstatusoutput as cmd

def error(expected, got):
    print "Error!  Expected:"
    print "  ", expected
    print "but got"
    print "  ", got

def listEQ(a, b, tag=None):
    print tag
    a.sort(); b.sort()
    if a==b: return
    error(b, a)

def strEQ(a, b, tag=None):
    print tag
    if a==b: return
    error(b, a)

def cleanup():
    chdir(environ['HOME'])
    if testset: system('rm -r mnt/sets/test')
    system('fusermount -u ./mnt')
    kill(pid, SIGHUP)
    
testls ="""total 2
--wxr-x--T  1 rdmurray users 1 Feb 10 19:46 IMG_9137.png
-rwxr-xr-x  1 rdmurray users 1 Feb 10 19:46 IMG_9138.png
--wxr-x--T  1 rdmurray users 1 Feb 10 20:50 IMG_9139.png"""
rscls = """total 2
-rw-r--r--  1 rdmurray users 1 Feb  2 22:47 Now That's A Radio.jpg
-rw-r--r--  1 rdmurray users 1 Nov  7 09:38 WJCU Studio.jpg
-rw-r--r--  1 rdmurray users 1 Feb  2 22:47 Whatever You Want To Hear.jpg"""
tratls = """total 4
-rw-r--r--  1 rdmurray users 1 Jan 30 04:47 Fo da Luciano.jpg
-rw-r--r--  1 rdmurray users 1 Jan 17 07:35 Lotti che non \xc3\xa8 Lotti.jpg
-rw-r--r--  1 rdmurray users 1 Jan 30 04:47 dscn5783.jpg.jpg
-rw-r--r--  1 rdmurray users 1 Jan 30 04:47 dscn5784.jpg.jpg
-rw-r--r--  1 rdmurray users 1 Jan 30 04:47 dscn5789.jpg.jpg
-rw-r--r--  1 rdmurray users 1 Jan 30 04:47 il menu memorabile..jpg
-rw-r--r--  1 rdmurray users 1 Jan 30 04:47 la gattona grassa da Luciano.jpg
-rw-r--r--  1 rdmurray users 1 Jan 17 07:35 ride.jpg"""


try:
    testset = False
    environ['HOME'] = getcwd()
    if not exists('mnt'): mkdir('mnt')
    pid = fork()
    if not pid: execl('../flickrfs.py','../flickrfs.py', './mnt')
    sleep(20)
    listEQ(listdir('mnt'), ['sets', 'tags'], 'check that base dirs exist')
    listEQ(listdir('mnt/sets'), ['flickrfstesttest'], 'check that existing test set shows up in sets')
    listEQ(listdir('mnt/sets/flickrfstesttest'), [ '.IMG_9137.meta', '.IMG_9138.meta', '.IMG_9139.meta',
        'IMG_9137.png', 'IMG_9138.png', 'IMG_9139.png'], 'check existing image set contents')
    strEQ(cmd('ls -l mnt/sets/flickrfstesttest')[1], testls, 'ls on existing set')
    mkdir('mnt/sets/test')
    testset = True
    listEQ(listdir('mnt/sets'), ['test', 'flickrfstesttest'], 'add a new test set')
    listEQ(listdir('mnt/sets/test'), [], 'check sets/test contents initially empty')
    system('cp screenshot_thumb.jpg mnt/sets/test:flickrfstesttest:flickrfstest')
    listEQ(listdir('mnt/sets/test'), ['screenshot_thumb.jpg'], 'look for uploaded test pic')
    listEQ(listdir('mnt/tags'), ['personal', 'public'], 'check for base tags dirs')
    listEQ(listdir('mnt/tags/public'), [], 'initially no public dirs')
    listEQ(listdir('mnt/tags/personal'), [], 'initially no personal dirs')
    mkdir('mnt/tags/personal/flickrfstesttest')
    mkdir('mnt/tags/personal/flickrfstesttest:flickrfstest')
    mkdir('mnt/stream')
    mkdir('mnt/tags/public/radio:station:college')
    mkdir('mnt/tags/public/trattoriatoscana')
    sleep(10)
    listEQ(listdir('mnt/tags/personal/flickrfstesttest'), ['.IMG_9137.meta', '.IMG_9138.meta', '.IMG_9139.meta', 'IMG_9137.png', 'IMG_9138.png',
            'IMG_9139.png', '.screenshot_thumb.meta', 'screenshot_thumb.jpg'], 'personal/flickrfstesttest should have some of our images')
    listEQ(listdir('mnt/tags/personal/flickrfstesttest:flickrfstest'), ['.IMG_9139.meta', 'IMG_9139.png',
            '.screenshot_thumb.meta', 'screenshot_thumb.jpg'], 'personal/flickrfstesttest:flickrfstest should have fewer images')
    dirlist = listdir('mnt/stream')
    listEQ(listdir('mnt/stream'), ['.IMG_9137.meta', '.IMG_9138.meta', '.IMG_9139.meta', 'IMG_9137.png', 'IMG_9138.png', 'IMG_9139.png',
        '.screenshot_thumb.meta', 'screenshot_thumb.jpg'], 'check our image stream contents')
    listEQ(listdir('mnt/tags/public/radio:station:college'), ["Now That's A Radio.jpg", 'WJCU Studio.jpg', 'Whatever You Want To Hear.jpg'],
        'check example public tag set')
    strEQ(cmd('ls -l mnt/tags/public/radio:station:college')[1], rscls, 'ls on example public tag set')
    listEQ(listdir('mnt/tags/public/trattoriatoscana'), ['Fo da Luciano.jpg', 'Lotti che non \xc3\xa8 Lotti.jpg', 'dscn5783.jpg.jpg',
        'dscn5784.jpg.jpg', 'dscn5789.jpg.jpg', 'il menu memorabile..jpg', 'la gattona grassa da Luciano.jpg', 'ride.jpg'],
        'public tag set with international characters')
    strEQ(cmd('ls -l mnt/tags/public/trattoriatoscana')[1], tratls, 'ls on international char public tag set')

except:
    cleanup()
    raise

cleanup()
